version: 3

vars:
  PROJECT_BIN_DIR: "$(pwd)/bin"

  GOLANGCI_LINT_VERSION: "v1.64.6"
  GOLANGCI_LINT_BIN: "{{ .PROJECT_BIN_DIR }}/golangci-lint"

tasks:
  # Tools
  install-tools:
    desc: "Install tools"
    cmd:  |
          GOBIN={{ .PROJECT_BIN_DIR }} go install github.com/golangci/golangci-lint/cmd/golangci-lint@{{ .GOLANGCI_LINT_VERSION }} && \
             {{ .GOLANGCI_LINT_BIN }} --version

  reinstall-tools:
    desc: "Reinstall tools (e.g. for updating to new versions)"
    cmd:  |
          rm -rf {{ .PROJECT_BIN_DIR }} && \
            mkdir -p {{ .PROJECT_BIN_DIR }} && \
            task install-tools

  # Lint
  lint:
    desc: "Run golangci-lint"
    cmd:  |
          {{ .GOLANGCI_LINT_BIN }} run --fix ./...

  # Test
  lib-test:
    desc: "Run unit tests"
    cmds:
      - go test ./... -coverprofile=coverage.out
      - cat coverage.out | grep -v "query/parser.gen.go" > coverage_filtered.out
      - go tool cover -func=coverage_filtered.out
    
  cmd-test:
    desc: "Run tests"
    dir: cmd/dumbqlgen
    cmds:
      - go test ./...

  cmd-bench:
    desc: "Run benchmarks"
    dir: cmd/dumbqlgen
    cmd: go test -bench=. -benchmem 

  # Codegen
  generate:
    desc: "Run code generators"
    cmd: go generate ./...

  # Build
  cmd-build:
    desc: "Build dumbqlgen"
    dir: cmd/dumbqlgen
    env:
      CGO_ENABLED: 0
    cmd: go build -o ../../bin/dumbqlgen .